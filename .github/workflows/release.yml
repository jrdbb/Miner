name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [386, amd64]
        exclude:
          - goos: darwin
            goarch: 386
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: "true"
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Download dependencies
        run: |
          go get github.com/golang/mock/mockgen@v1.4.4
          go install
          make generate
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          make
      - name: Create package
        id: package
        run: |
          PACKAGE_NAME=miner.${GITHUB_REF#refs/tags/}.${{ matrix.goos }}.${{ matrix.goarch }}.tar.gz
          cp README.md build/
          cp LICENSE build/
          tar -czvf $PACKAGE_NAME -C build .
          echo ::set-output name=name::${PACKAGE_NAME}
      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.package.outputs.name }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_content_type: application/gzip
